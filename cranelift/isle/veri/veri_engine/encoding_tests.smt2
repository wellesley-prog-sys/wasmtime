(set-option :print-success true)
(set-option :produce-models true)
(declare-const input (_ BitVec 8))
(declare-const zret0_0 (_ BitVec 8))
(declare-const zret4_0 (_ BitVec 8))
(declare-const zy4_0 (_ BitVec 8))
(declare-const zx4_0 (_ BitVec 8))
(declare-const zret5_0 (_ BitVec 8))
(declare-const zy2_0 (_ BitVec 8))
(declare-const zx2_0 (_ BitVec 8))
(declare-const zret6_0 (_ BitVec 8))
(declare-const zy1_0 (_ BitVec 8))
(declare-const zx1_0 (_ BitVec 8))
(declare-const zret7_0 (_ BitVec 8))
(declare-const clzret_0 (_ BitVec 8))
(declare-const sret0_0 (_ BitVec 8))
(declare-const sret4_0 (_ BitVec 8))
(declare-const sy4_0 (_ BitVec 8))
(declare-const sx4_0 (_ BitVec 8))
(declare-const sret5_0 (_ BitVec 8))
(declare-const sy2_0 (_ BitVec 8))
(declare-const sx2_0 (_ BitVec 8))
(declare-const sret6_0 (_ BitVec 8))
(declare-const sy1_0 (_ BitVec 8))
(declare-const sx1_0 (_ BitVec 8))
(declare-const sret7_0 (_ BitVec 8))
(declare-const clsret_0 (_ BitVec 8))
(declare-const cls8ret_0 (_ BitVec 8))
(declare-const fresh0 (_ BitVec 56))
(assert (and (= input #b11111111) (= zret0_0 (_ bv0 8)) (= zy4_0 (bvlshr ((_ extract 7 0) input) #x04)) (ite (not (= zy4_0 (_ bv0 8))) (= zret4_0 zret0_0) (= zret4_0 (bvadd zret0_0 (_ bv4 8)))) (ite (not (= zy4_0 (_ bv0 8))) (= zx4_0 zy4_0) (= zx4_0 ((_ extract 7 0) input))) (= zy2_0 (bvlshr zx4_0 #x02)) (ite (not (= zy2_0 (_ bv0 8))) (= zret5_0 zret4_0) (= zret5_0 (bvadd zret4_0 (_ bv2 8)))) (ite (not (= zy2_0 (_ bv0 8))) (= zx2_0 zy2_0) (= zx2_0 zx4_0)) (= zy1_0 (bvlshr zx2_0 #x01)) (ite (not (= zy1_0 (_ bv0 8))) (= zret6_0 zret5_0) (= zret6_0 (bvadd zret5_0 (_ bv1 8)))) (ite (not (= zy1_0 (_ bv0 8))) (= zx1_0 zy1_0) (= zx1_0 zx2_0)) (ite (not (= zx1_0 (_ bv0 8))) (= zret7_0 zret6_0) (= zret7_0 (bvadd zret6_0 (_ bv1 8)))) (ite (= zret7_0 (_ bv0 8)) (= clzret_0 zret7_0) (= clzret_0 (bvsub zret7_0 (_ bv1 8)))) (= sret0_0 (_ bv0 8)) (= sy4_0 (bvashr ((_ extract 7 0) input) #x04)) (ite (not (= sy4_0 (_ bv255 8))) (= sret4_0 sret0_0) (= sret4_0 (bvadd sret0_0 (_ bv4 8)))) (ite (not (= sy4_0 (_ bv255 8))) (= sx4_0 sy4_0) (= sx4_0 ((_ extract 7 0) input))) (= sy2_0 (bvashr sx4_0 #x02)) (ite (not (= sy2_0 (_ bv255 8))) (= sret5_0 sret4_0) (= sret5_0 (bvadd sret4_0 (_ bv2 8)))) (ite (not (= sy2_0 (_ bv255 8))) (= sx2_0 sy2_0) (= sx2_0 sx4_0)) (= sy1_0 (bvashr sx2_0 #x01)) (ite (not (= sy1_0 (_ bv255 8))) (= sret6_0 sret5_0) (= sret6_0 (bvadd sret5_0 (_ bv1 8)))) (ite (not (= sy1_0 (_ bv255 8))) (= sx1_0 sy1_0) (= sx1_0 sx2_0)) (ite (not (= sx1_0 (_ bv255 8))) (= sret7_0 sret6_0) (= sret7_0 (bvadd sret6_0 (_ bv1 8)))) (ite (= sret7_0 (_ bv0 8)) (= clsret_0 sret7_0) (= clsret_0 (bvsub sret7_0 (_ bv1 8)))) (ite (bvsle (_ bv0 8) ((_ extract 7 0) input)) (= cls8ret_0 clzret_0) (= cls8ret_0 clsret_0))))
(push)
(assert (= ((_ extract 7 0) (concat fresh0 cls8ret_0)) #b00000111))
(check-sat)
(pop)
(push)
(assert (not (= ((_ extract 7 0) (concat fresh0 cls8ret_0)) #b00000111)))
(check-sat)
(pop)
