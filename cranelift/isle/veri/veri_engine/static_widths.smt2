(set-option :print-success true)
(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(declare-const address__clif2__11 (_ BitVec 64))
(declare-const amode_to_gpr_mem__24 (_ BitVec 80))
(declare-const amode_to_gpr_mem__24__amode__92 (_ BitVec 80))
(declare-const amode_to_gpr_mem__24__result__93 (_ BitVec 80))
(declare-const and Int)
(declare-const ext_mode__22 (_ BitVec 3))
(declare-const ext_mode__22__result__61 (_ BitVec 3))
(declare-const ext_mode__22__x__59 (_ BitVec 16))
(declare-const ext_mode__22__y__60 (_ BitVec 16))
(declare-const fits_in_32__4 Int)
(declare-const fits_in_32__4__arg__27 Int)
(declare-const fits_in_32__4__result__28 Int)
(declare-const flags__clif1__8 (_ BitVec 16))
(declare-const has_type__18 (_ BitVec 32))
(declare-const has_type__18__arg__47 (_ BitVec 32))
(declare-const has_type__18__result__48 (_ BitVec 32))
(declare-const has_type__18__ty__46 Int)
(declare-const is_gpr_type__6 Int)
(declare-const is_gpr_type__6__arg__32 Int)
(declare-const is_gpr_type__6__result__33 Int)
(declare-const load__17 (_ BitVec 32))
(declare-const load__17__flags__37 (_ BitVec 16))
(declare-const load__17__offset__39 (_ BitVec 32))
(declare-const load__17__result__40 (_ BitVec 32))
(declare-const load__17__val__38 (_ BitVec 64))
(declare-const lower__19 (_ BitVec 32))
(declare-const lower__19__arg__52 (_ BitVec 32))
(declare-const lower__19__result__53 (_ BitVec 32))
(declare-const offset__clif3__14 (_ BitVec 32))
(declare-const output_gpr__26 (_ BitVec 32))
(declare-const output_gpr__26__result__131 (_ BitVec 32))
(declare-const output_gpr__26__x__130 (_ BitVec 64))
(declare-const to_amode__23 (_ BitVec 80))
(declare-const to_amode__23__flags__80 (_ BitVec 16))
(declare-const to_amode__23__offset__82 (_ BitVec 32))
(declare-const to_amode__23__result__83 (_ BitVec 80))
(declare-const to_amode__23__val__81 (_ BitVec 64))
(declare-const ty__clif0__1 Int)
(declare-const ty_bits_u16__20 (_ BitVec 16))
(declare-const ty_bits_u16__20__result__56 (_ BitVec 16))
(declare-const ty_bits_u16__20__x__55 Int)
(declare-const x64_movzx__25 (_ BitVec 64))
(declare-const x64_movzx__25__mode__95 (_ BitVec 3))
(declare-const x64_movzx__25__result__97 (_ BitVec 64))
(declare-const x64_movzx__25__src__96 (_ BitVec 80))
(declare-const fresh0 Int)
(declare-const fresh1 Int)
(declare-const fresh2 (_ BitVec 16))
(declare-const fresh3 (_ BitVec 64))
(declare-const fresh4 (_ BitVec 32))
(declare-const fresh5 (_ BitVec 32))
(declare-const fresh6 (_ BitVec 32))
(push)
(assert (! (= ty__clif0__1 fresh0) :named assum0))
(assert (! (= fits_in_32__4__result__28 fits_in_32__4__arg__27) :named assum1))
(assert (! (<= fits_in_32__4__arg__27 32) :named assum2))
(assert (! (= ty__clif0__1 fits_in_32__4__arg__27) :named assum3))
(assert (! (= fits_in_32__4 fits_in_32__4__result__28) :named assum4))
(assert (! (= is_gpr_type__6__result__33 is_gpr_type__6__arg__32) :named assum5))
(assert (! (<= is_gpr_type__6__arg__32 64) :named assum6))
(assert (! (= fresh1 is_gpr_type__6__arg__32) :named assum7))
(assert (! (= is_gpr_type__6 is_gpr_type__6__result__33) :named assum8))
(assert (! (= fits_in_32__4 is_gpr_type__6) :named assum9))
(assert (! (= flags__clif1__8 fresh2) :named assum10))
(assert (! (= address__clif2__11 fresh3) :named assum11))
(assert (! (= offset__clif3__14 fresh4) :named assum12))
(assert (! (= load__17__result__40 fresh5) :named assum13))
(assert (! (= flags__clif1__8 load__17__flags__37) :named assum14))
(assert (! (= address__clif2__11 load__17__val__38) :named assum15))
(assert (! (= offset__clif3__14 load__17__offset__39) :named assum16))
(assert (! (= load__17 load__17__result__40) :named assum17))
(assert (! (= has_type__18__result__48 has_type__18__arg__47) :named assum18))
(assert (! (= has_type__18__ty__46 32) :named assum19))
(assert (! (= fits_in_32__4 has_type__18__ty__46) :named assum20))
(assert (! (= load__17 has_type__18__arg__47) :named assum21))
(assert (! (= has_type__18 has_type__18__result__48) :named assum22))
(assert (! (= lower__19__result__53 lower__19__arg__52) :named assum23))
(assert (! (= has_type__18 lower__19__arg__52) :named assum24))
(assert (! (= lower__19 lower__19__result__53) :named assum25))
(assert (! (= ty_bits_u16__20__result__56 ((_ int2bv 16) ty_bits_u16__20__x__55)) :named assum26))
(assert (! (= ty__clif0__1 ty_bits_u16__20__x__55) :named assum27))
(assert (! (= ty_bits_u16__20 ty_bits_u16__20__result__56) :named assum28))
(assert (! (= ext_mode__22__result__61 (ite (= ext_mode__22__x__59 (_ bv8 16)) (ite (= ext_mode__22__y__60 (_ bv32 16)) (_ bv0 3) (_ bv1 3)) (ite (= ext_mode__22__x__59 (_ bv16 16)) (ite (= ext_mode__22__y__60 (_ bv32 16)) (_ bv2 3) (_ bv3 3)) (_ bv4 3)))) :named assum29))
(assert (! (= ty_bits_u16__20 ext_mode__22__x__59) :named assum30))
(assert (! (= (_ bv64 16) ext_mode__22__y__60) :named assum31))
(assert (! (= ext_mode__22 ext_mode__22__result__61) :named assum32))
(assert (! (= to_amode__23__result__83 (concat to_amode__23__flags__80 (bvadd to_amode__23__val__81 ((_ sign_extend 32) to_amode__23__offset__82)))) :named assum33))
(assert (! (= flags__clif1__8 to_amode__23__flags__80) :named assum34))
(assert (! (= address__clif2__11 to_amode__23__val__81) :named assum35))
(assert (! (= offset__clif3__14 to_amode__23__offset__82) :named assum36))
(assert (! (= to_amode__23 to_amode__23__result__83) :named assum37))
(assert (! (= amode_to_gpr_mem__24__result__93 amode_to_gpr_mem__24__amode__92) :named assum38))
(assert (! (= to_amode__23 amode_to_gpr_mem__24__amode__92) :named assum39))
(assert (! (= amode_to_gpr_mem__24 amode_to_gpr_mem__24__result__93) :named assum40))
(assert (! (= x64_movzx__25__result__97 (concat fresh6 ((_ zero_extend 0) fresh5))) :named assum41))
(assert (! (= ext_mode__22 x64_movzx__25__mode__95) :named assum42))
(assert (! (= amode_to_gpr_mem__24 x64_movzx__25__src__96) :named assum43))
(assert (! (= x64_movzx__25 x64_movzx__25__result__97) :named assum44))
(assert (! (= output_gpr__26__result__131 ((_ extract 31 0) output_gpr__26__x__130)) :named assum45))
(assert (! (= x64_movzx__25 output_gpr__26__x__130) :named assum46))
(assert (! (= output_gpr__26 output_gpr__26__result__131) :named assum47))
(check-sat)
(get-value (flags__clif1__8 address__clif2__11 offset__clif3__14))
(assert (and (not (= flags__clif1__8 #x0000)) (not (= address__clif2__11 #x0000000000000000)) (not (= offset__clif3__14 #x00000000))))
(check-sat)
(pop)
(assert (not (=> (and (= ty__clif0__1 fresh0) (= fits_in_32__4__result__28 fits_in_32__4__arg__27) (<= fits_in_32__4__arg__27 32) (= ty__clif0__1 fits_in_32__4__arg__27) (= fits_in_32__4 fits_in_32__4__result__28) (= is_gpr_type__6__result__33 is_gpr_type__6__arg__32) (<= is_gpr_type__6__arg__32 64) (= fresh1 is_gpr_type__6__arg__32) (= is_gpr_type__6 is_gpr_type__6__result__33) (= fits_in_32__4 is_gpr_type__6) (= flags__clif1__8 fresh2) (= address__clif2__11 fresh3) (= offset__clif3__14 fresh4) (= load__17__result__40 fresh5) (= flags__clif1__8 load__17__flags__37) (= address__clif2__11 load__17__val__38) (= offset__clif3__14 load__17__offset__39) (= load__17 load__17__result__40) (= has_type__18__result__48 has_type__18__arg__47) (= has_type__18__ty__46 32) (= fits_in_32__4 has_type__18__ty__46) (= load__17 has_type__18__arg__47) (= has_type__18 has_type__18__result__48) (= lower__19__result__53 lower__19__arg__52) (= has_type__18 lower__19__arg__52) (= lower__19 lower__19__result__53) (= ty_bits_u16__20__result__56 ((_ int2bv 16) ty_bits_u16__20__x__55)) (= ty__clif0__1 ty_bits_u16__20__x__55) (= ty_bits_u16__20 ty_bits_u16__20__result__56) (= ext_mode__22__result__61 (ite (= ext_mode__22__x__59 (_ bv8 16)) (ite (= ext_mode__22__y__60 (_ bv32 16)) (_ bv0 3) (_ bv1 3)) (ite (= ext_mode__22__x__59 (_ bv16 16)) (ite (= ext_mode__22__y__60 (_ bv32 16)) (_ bv2 3) (_ bv3 3)) (_ bv4 3)))) (= ty_bits_u16__20 ext_mode__22__x__59) (= (_ bv64 16) ext_mode__22__y__60) (= ext_mode__22 ext_mode__22__result__61) (= to_amode__23__result__83 (concat to_amode__23__flags__80 (bvadd to_amode__23__val__81 ((_ sign_extend 32) to_amode__23__offset__82)))) (= flags__clif1__8 to_amode__23__flags__80) (= address__clif2__11 to_amode__23__val__81) (= offset__clif3__14 to_amode__23__offset__82) (= to_amode__23 to_amode__23__result__83) (= amode_to_gpr_mem__24__result__93 amode_to_gpr_mem__24__amode__92) (= to_amode__23 amode_to_gpr_mem__24__amode__92) (= amode_to_gpr_mem__24 amode_to_gpr_mem__24__result__93) (= x64_movzx__25__result__97 (concat fresh6 ((_ zero_extend 0) fresh5))) (= ext_mode__22 x64_movzx__25__mode__95) (= amode_to_gpr_mem__24 x64_movzx__25__src__96) (= x64_movzx__25 x64_movzx__25__result__97) (= output_gpr__26__result__131 ((_ extract 31 0) output_gpr__26__x__130)) (= x64_movzx__25 output_gpr__26__x__130) (= output_gpr__26 output_gpr__26__result__131)) (and (and (and (and (= ((_ extract 31 0) lower__19) ((_ extract 31 0) output_gpr__26)) (and (= 64 64) (or (= x64_movzx__25__mode__95 (_ bv0 3)) (or (= x64_movzx__25__mode__95 (_ bv1 3)) (or (= x64_movzx__25__mode__95 (_ bv2 3)) (or (= x64_movzx__25__mode__95 (_ bv3 3)) (= x64_movzx__25__mode__95 (_ bv4 3)))))) (or (= ext_mode__22__y__60 (_ bv32 16)) (= ext_mode__22__y__60 (_ bv64 16))) (or (= ext_mode__22__y__60 (_ bv32 16)) (= ext_mode__22__y__60 (_ bv64 16))) (= ext_mode__22__y__60 (_ bv64 16)) (or (= ext_mode__22__x__59 (_ bv8 16)) (= ext_mode__22__x__59 (_ bv16 16)) (= ext_mode__22__x__59 (_ bv32 16))) (or (= x64_movzx__25__mode__95 (_ bv0 3)) (= x64_movzx__25__mode__95 (_ bv1 3)) (= x64_movzx__25__mode__95 (_ bv2 3)) (= x64_movzx__25__mode__95 (_ bv3 3)) (= x64_movzx__25__mode__95 (_ bv4 3))))) (= load__17__flags__37 ((_ extract 79 64) x64_movzx__25__src__96))) (= 32 (ite (= x64_movzx__25__mode__95 (_ bv0 3)) 8 (ite (= x64_movzx__25__mode__95 (_ bv1 3)) 8 (ite (= x64_movzx__25__mode__95 (_ bv2 3)) 16 (ite (= x64_movzx__25__mode__95 (_ bv3 3)) 16 32)))))) (= (bvadd load__17__val__38 ((_ sign_extend 32) load__17__offset__39)) ((_ extract 63 0) x64_movzx__25__src__96))))))
(check-sat)
