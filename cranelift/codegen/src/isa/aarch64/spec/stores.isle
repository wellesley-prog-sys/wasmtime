;; GENERATED BY `isaspec`. DO NOT EDIT!!!

(spec
    (MInst.Store8 rd mem flags)
    (modifies isa_store)
    (provide
        (match
            mem
            ((RegReg rn rm)
                (and
                    (= (:active isa_store) true)
                    (= (:size_bits isa_store) 8)
                    (= (:addr isa_store) (bvadd rn rm))
                    (= (conv_to 8 (:value isa_store)) (extract 7 0 rd))))
            ((RegScaled rn rm)
                (and
                    (= (:active isa_store) true)
                    (= (:size_bits isa_store) 8)
                    (= (:addr isa_store) (bvadd rn rm))
                    (= (conv_to 8 (:value isa_store)) (extract 7 0 rd))))
            ((RegScaledExtended rn rm extendop)
                (match
                    extendop
                    ((UXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 8)
                            (= (:addr isa_store) (bvadd rn (zero_ext 64 (extract 31 0 rm))))
                            (= (conv_to 8 (:value isa_store)) (extract 7 0 rd))))
                    ((SXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 8)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 (extract 31 0 rm))))
                            (= (conv_to 8 (:value isa_store)) (extract 7 0 rd))))
                    ((SXTX)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 8)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 rm)))
                            (= (conv_to 8 (:value isa_store)) (extract 7 0 rd))))))
            ((RegExtended rn rm extendop)
                (match
                    extendop
                    ((UXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 8)
                            (= (:addr isa_store) (bvadd rn (zero_ext 64 (extract 31 0 rm))))
                            (= (conv_to 8 (:value isa_store)) (extract 7 0 rd))))
                    ((SXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 8)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 (extract 31 0 rm))))
                            (= (conv_to 8 (:value isa_store)) (extract 7 0 rd))))
                    ((SXTX)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 8)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 rm)))
                            (= (conv_to 8 (:value isa_store)) (extract 7 0 rd))))))
            ((Unscaled rn simm9)
                (and
                    (= (:active isa_store) true)
                    (= (:size_bits isa_store) 8)
                    (= (:addr isa_store) (bvadd rn (sign_ext 64 (extract 8 0 simm9))))
                    (= (conv_to 8 (:value isa_store)) (extract 7 0 rd))))))
    (require
        (match
            mem
            ((RegReg rn rm) true)
            ((RegScaled rn rm) true)
            ((RegScaledExtended rn rm extendop) (match extendop ((UXTW) true) ((SXTW) true) ((SXTX) true)))
            ((RegExtended rn rm extendop) (match extendop ((UXTW) true) ((SXTW) true) ((SXTX) true)))
            ((Unscaled rn simm9) true))))

(spec
    (MInst.Store16 rd mem flags)
    (modifies isa_store)
    (provide
        (match
            mem
            ((RegReg rn rm)
                (and
                    (= (:active isa_store) true)
                    (= (:size_bits isa_store) 16)
                    (= (:addr isa_store) (bvadd rn rm))
                    (= (conv_to 16 (:value isa_store)) (extract 15 0 rd))))
            ((RegScaled rn rm)
                (and
                    (= (:active isa_store) true)
                    (= (:size_bits isa_store) 16)
                    (= (:addr isa_store) (bvadd rn (concat (extract 62 0 rm) #b0)))
                    (= (conv_to 16 (:value isa_store)) (extract 15 0 rd))))
            ((RegScaledExtended rn rm extendop)
                (match
                    extendop
                    ((UXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 16)
                            (= (:addr isa_store) (bvadd rn (zero_ext 64 (concat (extract 31 0 rm) #b0))))
                            (= (conv_to 16 (:value isa_store)) (extract 15 0 rd))))
                    ((SXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 16)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 (concat (extract 31 0 rm) #b0))))
                            (= (conv_to 16 (:value isa_store)) (extract 15 0 rd))))
                    ((SXTX)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 16)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 (concat (extract 62 0 rm) #b0))))
                            (= (conv_to 16 (:value isa_store)) (extract 15 0 rd))))))
            ((RegExtended rn rm extendop)
                (match
                    extendop
                    ((UXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 16)
                            (= (:addr isa_store) (bvadd rn (zero_ext 64 (extract 31 0 rm))))
                            (= (conv_to 16 (:value isa_store)) (extract 15 0 rd))))
                    ((SXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 16)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 (extract 31 0 rm))))
                            (= (conv_to 16 (:value isa_store)) (extract 15 0 rd))))
                    ((SXTX)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 16)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 rm)))
                            (= (conv_to 16 (:value isa_store)) (extract 15 0 rd))))))
            ((Unscaled rn simm9)
                (and
                    (= (:active isa_store) true)
                    (= (:size_bits isa_store) 16)
                    (= (:addr isa_store) (bvadd rn (sign_ext 64 (extract 8 0 simm9))))
                    (= (conv_to 16 (:value isa_store)) (extract 15 0 rd))))))
    (require
        (match
            mem
            ((RegReg rn rm) true)
            ((RegScaled rn rm) true)
            ((RegScaledExtended rn rm extendop) (match extendop ((UXTW) true) ((SXTW) true) ((SXTX) true)))
            ((RegExtended rn rm extendop) (match extendop ((UXTW) true) ((SXTW) true) ((SXTX) true)))
            ((Unscaled rn simm9) true))))

(spec
    (MInst.Store32 rd mem flags)
    (modifies isa_store)
    (provide
        (match
            mem
            ((RegReg rn rm)
                (and
                    (= (:active isa_store) true)
                    (= (:size_bits isa_store) 32)
                    (= (:addr isa_store) (bvadd rn rm))
                    (= (conv_to 32 (:value isa_store)) (extract 31 0 rd))))
            ((RegScaled rn rm)
                (and
                    (= (:active isa_store) true)
                    (= (:size_bits isa_store) 32)
                    (= (:addr isa_store) (bvadd rn (concat (extract 61 0 rm) #b00)))
                    (= (conv_to 32 (:value isa_store)) (extract 31 0 rd))))
            ((RegScaledExtended rn rm extendop)
                (match
                    extendop
                    ((UXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 32)
                            (= (:addr isa_store) (bvadd rn (zero_ext 64 (concat (extract 31 0 rm) #b00))))
                            (= (conv_to 32 (:value isa_store)) (extract 31 0 rd))))
                    ((SXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 32)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 (concat (extract 31 0 rm) #b00))))
                            (= (conv_to 32 (:value isa_store)) (extract 31 0 rd))))
                    ((SXTX)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 32)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 (concat (extract 61 0 rm) #b00))))
                            (= (conv_to 32 (:value isa_store)) (extract 31 0 rd))))))
            ((RegExtended rn rm extendop)
                (match
                    extendop
                    ((UXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 32)
                            (= (:addr isa_store) (bvadd rn (zero_ext 64 (extract 31 0 rm))))
                            (= (conv_to 32 (:value isa_store)) (extract 31 0 rd))))
                    ((SXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 32)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 (extract 31 0 rm))))
                            (= (conv_to 32 (:value isa_store)) (extract 31 0 rd))))
                    ((SXTX)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 32)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 rm)))
                            (= (conv_to 32 (:value isa_store)) (extract 31 0 rd))))))
            ((Unscaled rn simm9)
                (and
                    (= (:active isa_store) true)
                    (= (:size_bits isa_store) 32)
                    (= (:addr isa_store) (bvadd rn (sign_ext 64 (extract 8 0 simm9))))
                    (= (conv_to 32 (:value isa_store)) (extract 31 0 rd))))))
    (require
        (match
            mem
            ((RegReg rn rm) true)
            ((RegScaled rn rm) true)
            ((RegScaledExtended rn rm extendop) (match extendop ((UXTW) true) ((SXTW) true) ((SXTX) true)))
            ((RegExtended rn rm extendop) (match extendop ((UXTW) true) ((SXTW) true) ((SXTX) true)))
            ((Unscaled rn simm9) true))))

(spec
    (MInst.Store64 rd mem flags)
    (modifies isa_store)
    (provide
        (match
            mem
            ((RegReg rn rm)
                (and
                    (= (:active isa_store) true)
                    (= (:size_bits isa_store) 64)
                    (= (:addr isa_store) (bvadd rn rm))
                    (= (conv_to 64 (:value isa_store)) rd)))
            ((RegScaled rn rm)
                (and
                    (= (:active isa_store) true)
                    (= (:size_bits isa_store) 64)
                    (= (:addr isa_store) (bvadd rn (concat (extract 60 0 rm) #b000)))
                    (= (conv_to 64 (:value isa_store)) rd)))
            ((RegScaledExtended rn rm extendop)
                (match
                    extendop
                    ((UXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 64)
                            (= (:addr isa_store) (bvadd rn (zero_ext 64 (concat (extract 31 0 rm) #b000))))
                            (= (conv_to 64 (:value isa_store)) rd)))
                    ((SXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 64)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 (concat (extract 31 0 rm) #b000))))
                            (= (conv_to 64 (:value isa_store)) rd)))
                    ((SXTX)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 64)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 (concat (extract 60 0 rm) #b000))))
                            (= (conv_to 64 (:value isa_store)) rd)))))
            ((RegExtended rn rm extendop)
                (match
                    extendop
                    ((UXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 64)
                            (= (:addr isa_store) (bvadd rn (zero_ext 64 (extract 31 0 rm))))
                            (= (conv_to 64 (:value isa_store)) rd)))
                    ((SXTW)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 64)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 (extract 31 0 rm))))
                            (= (conv_to 64 (:value isa_store)) rd)))
                    ((SXTX)
                        (and
                            (= (:active isa_store) true)
                            (= (:size_bits isa_store) 64)
                            (= (:addr isa_store) (bvadd rn (sign_ext 64 rm)))
                            (= (conv_to 64 (:value isa_store)) rd)))))
            ((Unscaled rn simm9)
                (and
                    (= (:active isa_store) true)
                    (= (:size_bits isa_store) 64)
                    (= (:addr isa_store) (bvadd rn (sign_ext 64 (extract 8 0 simm9))))
                    (= (conv_to 64 (:value isa_store)) rd)))))
    (require
        (match
            mem
            ((RegReg rn rm) true)
            ((RegScaled rn rm) true)
            ((RegScaledExtended rn rm extendop) (match extendop ((UXTW) true) ((SXTW) true) ((SXTX) true)))
            ((RegExtended rn rm extendop) (match extendop ((UXTW) true) ((SXTW) true) ((SXTX) true)))
            ((Unscaled rn simm9) true))))
