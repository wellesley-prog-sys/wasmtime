(model Imm64 (type (bv 64)))

; REVIEW(mbm): do we need to model MemFlags?
(model MemFlags (type
    (struct
        (aligned Bool)
        (trapcode (bv 4))
    )
))

(model Offset32 (type (bv 32)))

(spec (iadd x y)
    (provide (= result (bvadd x y))))
(instantiate iadd
    ((args (bv 8) (bv 8)) (ret (bv 8)))
    ((args (bv 16) (bv 16)) (ret (bv 16)))
    ((args (bv 32) (bv 32)) (ret (bv 32)))
    ((args (bv 64) (bv 64)) (ret (bv 64)))
    ((args (bv 128) (bv 128)) (ret (bv 128)))
)

(spec (isub x y)
    (provide (= result (bvsub x y))))
(instantiate isub
    ((args (bv 32) (bv 32)) (ret (bv 32)))
    ((args (bv 64) (bv 64)) (ret (bv 64)))
)

(spec (imul x y)
    (provide (= result (bvmul x y))))
(instantiate imul
    ((args (bv 32) (bv 32)) (ret (bv 32)))
    ((args (bv 64) (bv 64)) (ret (bv 64)))
)

(spec (iconst arg)
    (provide (= arg (zero_ext 64 result))))
(instantiate iconst
    ((args (bv 64)) (ret (bv 64)))
)

(spec (ishl x y)
    (provide
        (= result
            (bvshl
                x
                (bvand y (conv_to (widthof y) (bvsub (int2bv 64 (widthof y)) #x0000000000000001)))
            )
        )
    )
)
(instantiate ishl
    ((args (bv 64) (bv 64)) (ret (bv 64)))
)

(spec (band x y)
    (provide (= result (bvand x y))))
(instantiate band
    ((args (bv 8) (bv 8)) (ret (bv 8)))
    ((args (bv 16) (bv 16)) (ret (bv 16)))
    ((args (bv 32) (bv 32)) (ret (bv 32)))
    ((args (bv 64) (bv 64)) (ret (bv 64)))
)

(spec (bor x y)
    (provide (= result (bvor x y))))
(instantiate bor
    ((args (bv 8) (bv 8)) (ret (bv 8)))
    ((args (bv 16) (bv 16)) (ret (bv 16)))
    ((args (bv 32) (bv 32)) (ret (bv 32)))
    ((args (bv 64) (bv 64)) (ret (bv 64)))
)

(spec (bnot x)
    (provide (= result (bvnot x))))
(instantiate bnot
    ((args (bv 8)) (ret (bv 8)))
    ((args (bv 16)) (ret (bv 16)))
    ((args (bv 32)) (ret (bv 32)))
    ((args (bv 64)) (ret (bv 64)))
)

(spec (cls x) (provide (= result (cls x))))
(instantiate cls
    ((args (bv 8)) (ret (bv 8)))
    ((args (bv 16)) (ret (bv 16)))
    ((args (bv 32)) (ret (bv 32)))
    ((args (bv 64)) (ret (bv 64)))
)
